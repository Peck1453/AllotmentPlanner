@model IEnumerable<AllotmentPlanner.Data.ViewModel.UserGardenViewModel>

@{
    ViewBag.Title = "GetUserGarden";
}

<h2>GetUserGarden</h2>

<p>
    @Html.ActionLink("Add or Edit Crops", "ListSelectedCrops")
</p>
<table class="table">
    <tr>
        @*<th>
            @Html.DisplayNameFor(model => model.cropId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.gardenId)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.cropName)
        </th>
        <th>Actions Pending
        </th>
        <th>
            @Html.DisplayNameFor(model => model.growthTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.dateIn)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.dateOut)
        </th>*@
        @*<th>
            @Html.DisplayNameFor(model => model.cropSize)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.earliestPlant)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.latestPlant)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.earliestHarvest)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.estimatedHarvestDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.lastestHarvest)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        @*<td>
            @Html.DisplayFor(modelItem => item.cropId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.gardenId)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.cropName)
        </td>
@if (item.dateIn != null)
{
        <td>
            @Html.ActionLink("Harvest", "HarvestCrop", new { controller = "GardenAdmin", PlantedId =item.plantedId  }) |
            @Html.ActionLink("Water", "Edit", new { controller = "GardenAdmin", id =item.plantedId }) |
            @Html.ActionLink("Place slug Pellets", "Edit", new { controller = "GardenAdmin", id =item.plantedId  }) |
        </td>
}
@if (item.dateIn == null)
{
        <td>@Html.ActionLink("Plant", "PlantCrop", new { controller = "GardenAdmin", PlantedId =item.plantedId  }) |
         @Html.ActionLink("Water", "Edit", new { controller = "GardenAdmin",  id =item.plantedId }) |
         @Html.ActionLink("Place slug Pellets", "Edit", new { controller = "GardenAdmin", id =item.plantedId }) |
        </td>
}
        <td>
            @Html.DisplayFor(modelItem => item.growthTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.dateIn)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.dateOut)
        </td>*@
        @*<td>
            @Html.DisplayFor(modelItem => item.cropSize)
        </td>*@
        @if (item.dateIn != null)
        {
        <td>
            @Html.DisplayFor(modelItem => item.earliestPlant)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.latestPlant)
        </td>
        }
        @if (item.dateIn == null)
        {
            <td>
                <input type="hidden" name="productItemId" id="productItemId" value="@item.earliestPlant" />
            </td>
            <td>
                <input type="hidden" name="productItemId" id="productItemId" value="@item.latestPlant" />
            </td>

        }
        <td>
            @Html.DisplayFor(modelItem => item.earliestHarvest)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.estimatedHarvestDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.lastestHarvest)
        </td>
        @*<td>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </td>*@
    </tr>
}

</table>

@{
    Html.RenderAction("_loopTends", "Tend");
}


